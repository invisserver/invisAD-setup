server {
    include include/invis.include;
    include include/invis-ssl.include;

    root /srv/www/htdocs/z-push2;
    
    listen 443 ssl;
    #server_name schotten.fsproductions.de;
	server_name localhost;    
	
	# Zertifikate einbinden
    include "include/certfile.include";

    # Logfiles
    access_log /var/log/nginx/vh-combined-access.log;
    error_log /var/log/nginx/vh-combined-error.log;

    # ActiveSync
    location ~* /AutoDiscover/AutoDiscover.xml {
	alias /srv/www/htdocs/z-push2/autodiscover/autodiscover.php;
	include /etc/nginx/fastcgi.conf;
	fastcgi_read_timeout 3660;
	fastcgi_pass 127.0.0.1:9000;
    }

    location ~* /Microsoft-Server-ActiveSync {
	alias /srv/www/htdocs/z-push2/index.php;
	include /etc/nginx/fastcgi.conf;
	fastcgi_read_timeout 3660;
	fastcgi_pass 127.0.0.1:9000;
    }

## Das koennte klappen.
## Wir muessen dann nur fuer jede installierte App eintweder 
## einen Pfad zur 404.html oder zum realen Verzeichnis in
## die entsprechende Variable packen -> sine2

	location /webapp {
		alias $KOPANO;
	}

	# Folgendes erst mal auskommentiert, hatten wir frueher auch nicht.
    #location = /.well-known/carddav {
    #    return 301 $scheme://$host/owncloud/remote.php/dav;
    #}
    #location = /.well-known/caldav {
    #    return 301 $scheme://$host/owncloud/remote.php/dav;
    #}

	# wozu ^~ da ist, ist noch nicht klar
	location ^~ /owncloud {
		# nginx erlaubt die root direktive innerhalb von location
		#alias $OWNCLOUD;
		root $OWNCLOUD;
		# Add headers to serve security related headers
    	# Before enabling Strict-Transport-Security headers please read into this topic first.
    	#add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
    	add_header X-Content-Type-Options nosniff;
    	add_header X-Frame-Options "SAMEORIGIN";
    	add_header X-XSS-Protection "1; mode=block";
    	add_header X-Robots-Tag none;
    	add_header X-Download-Options noopen;
    	add_header X-Permitted-Cross-Domain-Policies none;
	
        # set max upload size
        client_max_body_size 512M;
        fastcgi_buffers 8 4K;                     # Please see note 1
        fastcgi_ignore_headers X-Accel-Buffering; # Please see note 2

        # Disable gzip to avoid the removal of the ETag header
        # Enabling gzip would also make your server vulnerable to BREACH
        # if no additional measures are done. See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=773332
        gzip off;

        # Uncomment if your server is build with the ngx_pagespeed module
        # This module is currently not supported.
        #pagespeed off;

        error_page 403 /owncloud/core/templates/403.php;
        error_page 404 /owncloud/core/templates/404.php;

		# location in location scheint auch erlaubt
        location /owncloud {
            rewrite ^ /owncloud/index.php$uri;
        }

        location ~ ^/owncloud/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            return 404;
        }
        location ~ ^/owncloud/(?:\.|autotest|occ|issue|indie|db_|console) {
            return 404;
        }

        location ~ ^/owncloud/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) {
            fastcgi_split_path_info ^/owncloud(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name; # necessary for owncloud to detect the contextroot https://github.com/owncloud/core/blob/v10.0.0/lib/private/AppFramework/Http/Request.php#L603
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param HTTPS on;
            fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice
            # EXPERIMENTAL: active the following if you need to get rid of the 'index.php' in the URLs
            #fastcgi_param front_controller_active true;
            fastcgi_read_timeout 180; # increase default timeout e.g. for long running carddav/ caldav syncs with 1000+ entries
            # Folgende Zeile wirft noch Fehler "no port in upstream "php-handler"
			# -> Vermutlich, da mit Socket konfiguriert.
			#fastcgi_pass php-handler;
            fastcgi_intercept_errors on;
            fastcgi_request_buffering off; #Available since NGINX 1.7.11
        }

        location ~ ^/owncloud/(?:updater|ocs-provider)(?:$|/) {
            try_files $uri $uri/ =404;
            index index.php;
        }

        # Adding the cache control header for js and css files
        # Make sure it is BELOW the PHP block
        location ~ /owncloud(\/.*\.(?:css|js)) {
            try_files $1 /owncloud/index.php$1$is_args$args;
            add_header Cache-Control "max-age=15778463";
            # Add headers to serve security related headers  (It is intended to have those duplicated to the ones above)
            # Before enabling Strict-Transport-Security headers please read into this topic first.
            #add_header Strict-Transport-Security "max-age=15552000; includeSubDomains";
            add_header X-Content-Type-Options nosniff;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Robots-Tag none;
            add_header X-Download-Options noopen;
            add_header X-Permitted-Cross-Domain-Policies none;
            # Optional: Don't log access to assets
            access_log off;
        }

        location ~ /owncloud(/.*\.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg|map)) {
            try_files $1 /owncloud/index.php$1$is_args$args;
            add_header Cache-Control "public, max-age=7200";
            # Optional: Don't log access to other assets
            access_log off;
        }

	}

}
