#!/bin/bash
# LDAP Strukturen auf invis-Standard erweitern
# nuetzlich bei Upgrade eines klassischen invis- oder Uebernahme eines MS ADs

# (c) 2016 Stefan Schaefer - invis-server.org

# License: GPLv3
# Dieses Programm ist freie Software. Sie können es unter den Bedingungen der 
# GNU General Public License, wie von der Free Software Foundation veröffentlicht,
# weitergeben und/oder modifizieren, entweder gemäß Version 3 der Lizenz oder
# (nach Ihrer Option) jeder späteren Version.

# Die Veröffentlichung dieses Programms erfolgt in der Hoffnung, daß es Ihnen
# von Nutzen sein wird, aber OHNE IRGENDEINE GARANTIE, sogar ohne die implizite 
# Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN BESTIMMTEN ZWECK. 
# Details finden Sie in der GNU General Public License.

# Sie sollten ein Exemplar der GNU General Public License zusammen mit diesem 
# Programm erhalten haben. Falls nicht, siehe <http://www.gnu.org/licenses/>. 



# Funktionen
# Werte aus Konfigurationsdatendatei extrahieren
getconfdata() {
    cat $setupdir/invis_confdata |grep "$1:" | cut -d ":" -f $2
}

# Konfigurationsparameter tauschen
changevalues() {
    # Arg1 = Pfad, Arg2 = Datei, Arg3 = sed String
    cat $1/$2|sed "s%$3%g" > $1/$2.new
    mv $1/$2.new $1/$2
}

writeprepstat() {
	read -a prepstat < $setupdir/prepstat
	if [[ $prepstat != "ready" ]]; then
		echo "$1" > $setupdir/prepstat
	fi
}
# Strings in Kleinschreibung umwandeln
tolower() {
    echo $1 | tr [:upper:] [:lower:]
}

yesno() {
    # Argument $1 = Fragetext $2 = Dialogtitel
    dialog --backtitle "$dialogtitle" --title "$2" --yesno "$1" 0 0
}

textbox() {
    # Argument $1 = Ausgabedatei $2 = Dialogtitel $3 = Exit-Label
    if [[ -z $3 ]]; then
        dialog --backtitle "$dialogtitle" --title "$2" --textbox "$1" 0 0
    else
	dialog --backtitle "$dialogtitle" --title "$2" --exit-label "$3" --textbox "$1" 0 0
    fi
}

msgbox() {
    # Argument $1 = Ausgabedatei $2 = Dialogtitel
    dialog --backtitle "$dialogtitle" --title "$2" --msgbox "$1" 0 0
}

pgbox() {
    dialog --sleep 2 --backtitle "$dialogtitle" --title "$windowtitle" --progressbox  "$pgsubtitle" 25 110
}

## Variablen
setupdir="."
cfilesdir="./cfiles"
basedn="dc=pe,dc=loc"
organisation="plating electronic GmbH"
hname="server1"
fqdn="server1.pe.loc"
domain="pe.loc"
ddnsname="217.92.47.253"
ocport:"53226"
ipaddr="10.255.255.25"
rd="255.255.10"

    ## LDIF-Dateien vorbereiten
    pgsubtitle="LDAP Schema-Erweiterungen werden vorbereitet"
    mkdir $setupdir/schema 2>&1| tee -a $setupdir/sine.log | pgbox
    { for x in `find $cfilesdir/LDAP/Schemas/ -name "*.ldif"`; do
	cp $x $setupdir/schema| tee -a $setupdir/sine.log
    done } 2>&1| tee -a $setupdir/sine.log | pgbox

    path="$setupdir/schema"
    { for x in $path/*; do
	file=`basename $x`
	echo "Bereite Datei $file vor."
	#basedn=`getconfdata "baseDN" "2"`
	strings="dc=invis-net,dc=loc%$basedn"
	changevalues $path $file "$strings"
	strings="DC=invis-net,DC=loc%$basedn"
	changevalues $path $file "$strings"
    done } 2>&1| tee -a $setupdir/sine.log | pgbox

    # Schemaerweiterung Attributtypen einpflegen
    pgsubtitle="LDAP Schema-Erweiterungen werden eingepflegt"
    { for attrfile in `ls $setupdir/schema/*-ad-attributes-schema.ldif`; do
	ldbadd -v -H /var/lib/samba/private/sam.ldb $attrfile --option="dsdb:schema update allowed"=true
    done } 2>&1| tee -a $setupdir/sine.log | pgbox

    # Schemaerweiterungen Objektklassen einpflegen
    { for objcfile in `ls $setupdir/schema/*-ad-objectclasses-schema.ldif`; do
	ldbadd -v -H /var/lib/samba/private/sam.ldb $objcfile --option="dsdb:schema update allowed"=true
    done } 2>&1| tee -a $setupdir/sine.log | pgbox

    ## LDIF-Dateien vorbereiten
    pgsubtitle="Ergänzende LDAP Daten werden vorbereitet"
    mkdir $setupdir/ldif 2>&1| tee -a $setupdir/sine.log | pgbox
    
    { for x in `find $cfilesdir/LDAP/LDIF-DATEIEN -name "*.ldif"`; do
	cp $x $setupdir/ldif| tee -a $setupdir/sine.log
    done } 2>&1| tee -a $setupdir/sine.log | pgbox
    
    path="$setupdir/ldif"
    { for x in $path/*; do
	file=`basename $x`
	echo "Bereite Datei $file vor."
	#basedn=`getconfdata "baseDN" "2"`
	strings="dc=invis-net,dc=loc%$basedn"
	changevalues $path $file "$strings"

	strings="DC=invis-net,DC=loc%$basedn"
	changevalues $path $file "$strings"
        
	#organization=`getconfdata "Organisation" "2"`
	strings="targetOrganization%$organization"
	changevalues $path $file "$strings"

	strings="descriptionText%Basisknoten des LDAP-Verzeichnisses von $organization"
        changevalues $path $file "$strings"
	
	#hname=`getconfdata "Hostname" "2"`
	strings="invis5%$hname"
	changevalues $path $file "$strings"
	
	#fqdn=`getconfdata "FQDN" "2"`
	strings="invisfqdn%$fqdn"
	changevalues $path $file "$strings"

	#ddnsname=`getconfdata "DDNS" "2"`
	#ocport=`getconfdata "OCPORT" "2"`
	strings="server-fqdn-ocport%$ddnsname:$ocport"
	changevalues $path $file "$strings"
	
	#domain=`getconfdata "Domain" "2"`
        strings="invis-net.loc%$domain"
	changevalues $path $file "$strings"
	
	dompart1=`echo $domain|cut -d "." -f 1`
	strings="invis-net%$dompart1"
	changevalues $path $file "$strings"
	
	#ipaddr=`getconfdata "IP" "2"`
	strings="192.168.220.10%$ipaddr"
	changevalues $path $file "$strings"
	
	netpart1=`echo "$ipaddr" | cut -d "." -f 1`
	netpart2=`echo "$ipaddr" | cut -d "." -f 2`
	netpart3=`echo "$ipaddr" | cut -d "." -f 3`
	netpart="$netpart1.$netpart2.$netpart3."
	strings="192.168.220.%$netpart"
	changevalues $path $file "$strings"
	
	#rd=`getconfdata "ReverseDom" "2"`
	strings="220.168.192%$rd"
	changevalues $path $file "$strings"
	
	hostpart=`echo "$ipaddr" | cut -d "." -f 4`
	strings="relativeDomainName:10%relativeDomainName:$hostpart"
	changevalues $path $file "$strings"
	
	strings="relativeDomainName=10,%relativeDomainName=$hostpart,"
	changevalues $path $file "$strings"
	
	strings="dhcpNetMask:24%dhcpNetMask:$shortnmask"
	changevalues $path $file "$strings"
	
    done } 2>&1| tee -a $setupdir/sine.log | pgbox

    # LDAP fuellen
    pgsubtitle="Ergänzende LDAP Daten werden eingepflegt"
    { for x in $path/*; do
	#echo $x
	 ldbadd -v -H /var/lib/samba/private/sam.ldb $x
    done } 2>&1| tee -a $setupdir/sine.log | pgbox

